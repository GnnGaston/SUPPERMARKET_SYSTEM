/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Component;

import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import suppermarket.DatabaseConnection;

/**
 *
 * @author asha
 */
public class Category extends javax.swing.JPanel {

    /**
     * Creates new form Category
     */
       Connection conn;
   Statement st;
   ResultSet rs;
    Statement st1;
   ResultSet rs1;
   DatabaseConnection db;
    public Category() {
        initComponents();
    db=new DatabaseConnection();
    conn=db.ConnectDB();
    }
      private void Upadet_Table(){
    String query="select * from Category_Table ";
    try{
   st= conn.createStatement();
   rs=st.executeQuery(query);
   category_table.setModel(DbUtils.resultSetToTableModel(rs));
    
    }catch(Exception b){
    
    }
    
    }
    
          public void Empty_TextField(){
     id_txt.setText("");
              name_txt.setText("");
              
            
    
    }
     private boolean isvalideName(String mobile){
       String patern="^\\w$";
  
      java.util.regex.Pattern p = java.util.regex.Pattern.compile(patern);
       java.util.regex.Matcher m = p.matcher(mobile);
           return m.matches();
  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        id_txt = new javax.swing.JTextField();
        name_txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        save_Category = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cancel_category = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        category_table = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        Delete_category = new javax.swing.JButton();
        view_category = new javax.swing.JButton();
        update_category_ = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Product Category", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Category > Entry", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 51, 51))); // NOI18N

        id_txt.setPreferredSize(new java.awt.Dimension(170, 25));

        name_txt.setPreferredSize(new java.awt.Dimension(170, 25));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("BarCode");

        save_Category.setText("Save");
        save_Category.setPreferredSize(new java.awt.Dimension(130, 25));
        save_Category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_CategoryActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Category Name");

        cancel_category.setText("Cancel");
        cancel_category.setPreferredSize(new java.awt.Dimension(130, 25));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(save_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cancel_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id_txt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(name_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(save_Category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        category_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Barcode", "Category Name"
            }
        ));
        category_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                category_tableMouseClicked(evt);
            }
        });
        category_table.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                category_tableKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(category_table);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modify > Access > Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(0, 51, 51))); // NOI18N

        Delete_category.setText("Delete");
        Delete_category.setPreferredSize(new java.awt.Dimension(120, 25));
        Delete_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_categoryActionPerformed(evt);
            }
        });

        view_category.setText("View");
        view_category.setPreferredSize(new java.awt.Dimension(120, 25));
        view_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_categoryActionPerformed(evt);
            }
        });

        update_category_.setText("Update");
        update_category_.setPreferredSize(new java.awt.Dimension(120, 25));
        update_category_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_category_ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(view_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(update_category_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Delete_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(view_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(update_category_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Delete_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void save_CategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_CategoryActionPerformed
        // TODO add your handling code here:
                        if(id_txt.getText().length()==0){
        JOptionPane.showMessageDialog(null,"Fill Category ID","ID Empty",JOptionPane.ERROR_MESSAGE);
       // Empty_TextField();
          return;
        
        }else if(name_txt.getText().length()==0){
        JOptionPane.showMessageDialog(null,"Fill Category Name","Name Empty",JOptionPane.ERROR_MESSAGE);
        
          return;
        
    
        }
        
       
        
       /* else{
               if(isvalideName(name_txt.getText())== false){
         JOptionPane.showMessageDialog(null,"invalide  name","Mobile validate",JOptionPane.ERROR_MESSAGE);
        return;
        
        }*/else
             
             
            
             {
          
        String sql="insert into Category_Table values('"+id_txt.getText()+"',"
                + "'"+name_txt.getText()+"')";
        try{
           st=conn.createStatement();
           int p=st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null,"Data saved");
        }catch(Exception j){
            JOptionPane.showMessageDialog(null,"failed  saved  "+j);
    }
        
        Empty_TextField();
        Upadet_Table();
        }
        //}
    }//GEN-LAST:event_save_CategoryActionPerformed

    private void view_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_categoryActionPerformed
        // TODO add your handling code here:
         Upadet_Table();
    }//GEN-LAST:event_view_categoryActionPerformed

    private void update_category_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_category_ActionPerformed
        // TODO add your handling code here:
               if(id_txt.getText().length()==0 && name_txt.getText().length()==0){
          JOptionPane.showMessageDialog(null,"Select data from table to update first","Update Information",JOptionPane.INFORMATION_MESSAGE);
        //Empty_TextField();
          return;
        }else{
         if(isvalideName(name_txt.getText())== false){
         JOptionPane.showMessageDialog(null,"invalide  Mobile Number","Mobile validate",JOptionPane.ERROR_MESSAGE);
        return;
        
        }else
             
             
            
             {        
                     
        try{
        String query_update="update Category_Table set Category_ID='"+id_txt.getText()+"',"
                + "Category_Name='"+name_txt.getText()+"' where Category_ID='"+id_txt.getText()+"'";
            st=conn.createStatement();
            st.executeUpdate(query_update);
              JOptionPane.showMessageDialog(null,"Data updated");
        }catch(Exception c){
          JOptionPane.showMessageDialog(null,"Data failed "+c);
        
        }
        Empty_TextField();
        Upadet_Table();
           }
                 }
    }//GEN-LAST:event_update_category_ActionPerformed

    private void Delete_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_categoryActionPerformed
        // TODO add your handling code here:
                    if(id_txt.getText().length()==0 && name_txt.getText().length()==0){
          JOptionPane.showMessageDialog(null,"Select data from table to update first","Update Information",JOptionPane.INFORMATION_MESSAGE);
        //Empty_TextField();
          return;
        }else{
         int p=JOptionPane.showConfirmDialog(null, "Do your really want to delete these data","Delete",JOptionPane.YES_NO_OPTION);
        if(p==0){
           String sql="delete from Category_Table where Category_ID='"+id_txt.getText()+"'";
        try{
           st=conn.createStatement();
           st.executeUpdate(sql);
            JOptionPane.showMessageDialog(null,"Data deleted");
        }catch(Exception j){
            JOptionPane.showMessageDialog(null,"failed deleted "+j);
    }
     Empty_TextField();  
     Upadet_Table();
        }
                 }
    }//GEN-LAST:event_Delete_categoryActionPerformed

    private void category_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_category_tableMouseClicked
        // TODO add your handling code here:
          try{
            int row=category_table.getSelectedRow();
        String Table_Clicked=(category_table.getModel().getValueAt(row, 0).toString());
         String query="select * from Category_Table where Category_ID='"+Table_Clicked+"'";
            st= conn.createStatement();
             rs=st.executeQuery(query);
             if(rs.next()){
             id_txt.setText(rs.getString("Category_ID"));
              name_txt.setText(rs.getString("Category_Name"));
              
            
               
             
             }
        }catch(Exception v){
        
        }
    }//GEN-LAST:event_category_tableMouseClicked

    private void category_tableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_category_tableKeyPressed
        // TODO add your handling code here:
           if(evt.getKeyCode()== KeyEvent.VK_DOWN ||evt.getKeyCode()==KeyEvent.VK_UP ){
        
          try{
            int row=category_table.getSelectedRow();
        String Table_Clicked=(category_table.getModel().getValueAt(row, 0).toString());
         String query="select * from Category_Table where Category_ID='"+Table_Clicked+"'";
            st= conn.createStatement();
             rs=st.executeQuery(query);
             if(rs.next()){
             id_txt.setText(rs.getString("Category_ID"));
              name_txt.setText(rs.getString("Category_Name"));
             
          
             
               //id_txt.setText(rs.getString("Company_Logo"));
             
             }
        }catch(Exception v){
        
        
        }
        
        }
    }//GEN-LAST:event_category_tableKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete_category;
    private javax.swing.JButton cancel_category;
    private javax.swing.JTable category_table;
    private javax.swing.JTextField id_txt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name_txt;
    private javax.swing.JButton save_Category;
    private javax.swing.JButton update_category_;
    private javax.swing.JButton view_category;
    // End of variables declaration//GEN-END:variables
}
